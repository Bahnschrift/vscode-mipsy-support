{
    "fileTypes": [
        "s",
        "mips",
        "spim",
        "asm"
    ],
    "keyEquivalent": "^~M",
    "name": "MIPS Assembler",
    "patterns": [
        {
            "comment": "Pseudo-instructions",
            "match": "\\b(div|divu|rem|remu|seq|sne|sle|sleu|sgt|sgtu|sge|sgeu|abs|neg|negu|not|rol|ror|li|la|ld|sd|push|pop|begin|end|move|bnez|bge|bgeu|bgt|bgtu|ble|bleu)\\b",
            "name": "support.function.pseudo.mips"
        },
        {
            "comment": "Instructions",
            "match": "\\b(add|addi|addu|addiu|sub|subu|mul|mult|multu|madd|maddu|msub|msubu|div|divu|clo|clz|seb|seh|slt|sltu|slti|sltiu|and|andi|or|ori|nor|xor|xori|rotr|rotrv|sll|sllv|sra|srav|srl|srlv|lui|lb|lbu|lh|lhu|lw|sebsh|sw|mfhi|mflo|mthi|mtlo|movz|movn|b|bal|beq|bne|bgez|bgtz|bltz|blez|bgezal|bltzal|j|jal|jr|jalr|syscall)\\b",
            "name": "support.function.mips"
        },
        {
            "match": "\\.(ascii|asciiz|byte|data|double|float|half|kdata|ktext|space|text|word|set\\s*(noat|at|noreorder|reorder))\\b",
            "name": "storage.type.mips"
        },
        {
            "match": "\\.(align|extern|globl)\\b",
            "name": "storage.modifier.mips"
        },
        {
            "captures": {
                "1": {
                    "name": "entity.name.function.label.mips"
                }
            },
            "match": "\\b([A-Za-z0-9_]+):",
            "name": "meta.function.label.mips"
        },
        {
            "captures": {
                "1": {
                    "name": "punctuation.definition.variable.mips"
                }
            },
            "match": "(\\$)(0|[2-9]|1[0-9]|2[0-5]|2[89]|3[0-1])\\b",
            "name": "variable.other.register.usable.by-number.mips"
        },
        {
            "captures": {
                "1": {
                    "name": "punctuation.definition.variable.mips"
                }
            },
            "match": "(\\$)(zero|v[01]|a[0-3]|t[0-9]|s[0-8]|gp|sp|fp|ra)\\b",
            "name": "variable.other.register.usable.by-name.mips"
        },
        {
            "captures": {
                "1": {
                    "name": "punctuation.definition.variable.mips"
                }
            },
            "match": "(\\$)(at|k[01]|1|2[67])\\b",
            "name": "variable.other.register.reserved.mips"
        },
        {
            "captures": {
                "1": {
                    "name": "punctuation.definition.variable.mips"
                }
            },
            "match": "(\\$)f([0-9]|1[0-9]|2[0-9]|3[0-1])\\b",
            "name": "variable.other.register.usable.floating-point.mips"
        },
        {
            "match": "\\b\\d+\\.\\d+\\b",
            "name": "constant.numeric.float.mips"
        },
        {
            "match": "(\\b\\d+|-\\b|0(x|X)[a-fA-F0-9]+)\\b",
            "name": "constant.numeric.integer.mips"
        },
        {
            "begin": "\"",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.mips"
                }
            },
            "end": "\"",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.mips"
                }
            },
            "name": "string.quoted.double.mips",
            "patterns": [
                {
                    "match": "\\\\[rnt\\\\\"]",
                    "name": "constant.character.escape.mips"
                }
            ]
        },
        {
            "begin": "'",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.mips"
                }
            },
            "end": "'",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.mips"
                }
            },
            "name": "string.quoted.single.mips",
            "patterns": [
                {
                    "match": "\\\\[rnt\\\\\"]",
                    "name": "constant.character.escape.mips"
                }
            ]
        },
        {
            "begin": "(^[ \\t]+)?(?=#)",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.whitespace.comment.leading.mips"
                }
            },
            "end": "(?!\\G)",
            "patterns": [
                {
                    "begin": "#",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.mips"
                        }
                    },
                    "end": "\\n",
                    "name": "comment.line.number-sign.mips"
                }
            ]
        }
    ],
    "scopeName": "source.mips",
    "uuid": "7FD88C2E-6BE3-11D9-9A40-0011242E4184"
}