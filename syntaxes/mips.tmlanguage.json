{
    "fileTypes": [
        "s",
        "mips",
        "spim",
        "asm"
    ],
    "keyEquivalent": "^~M",
    "name": "MIPS Assembler",
    "patterns": [
        {
            "comment": "Pseudo-instructions",
            "match": "\\b(abs|b|bal|begin|beqz|bge|bgeu|bgt|bgtu|ble|bleu|blt|bltu|bnez|copy|decr|end|incr|la|li|mod|modu|move|mul|neg|negu|nop|not|pop|push|rem|remu|rol|ror|seq|sge|sgeu|sgt|sgtu|sle|sleu|sne|zeb|zeh)\\b",
            "name": "support.function.pseudo.mips"
        },
        {
            "comment": "Instructions",
            "match": "\\b(add|addi|addiu|addu|and|andi|beq|bgez|bgezal|bgtz|blez|bltz|bltzal|bne|clo|clz|div|divu|j|jal|jalr|jr|lb|lbu|lh|lhu|lui|lw|lwc1|lwl|lwr|madd|maddu|mfhi|mflo|movn|movz|msub|msubu|mthi|mtlo|mult|multu|nor|or|ori|rotr|rotrv|sb|seb|seh|sh|sll|sllv|slt|slti|sltiu|sltu|sra|srav|srl|srlv|sub|subu|sw|swc1|syscall|teq|teqi|tge|tgei|tgeiu|tgeu|tlt|tlti|tltiu|tltu|tne|tnei|wsbh|xor|xori)\\b",
            "name": "support.function.mips"
        },
        {
            "comment": "Debugging Instructions",
            "match": "\\b(break|dbg_print_char|dbg_print_int|dbg_print_str)\\b",
            "name": "support.function.debugging.mips"
        },
        {
            "match": "\\.(ascii|asciiz|byte|data|double|float|half|kdata|ktext|space|text|word|set\\s*(noat|at|noreorder|reorder))\\b",
            "name": "storage.type.mips"
        },
        {
            "match": "\\.(align|extern|globl)\\b",
            "name": "storage.modifier.mips"
        },
        {
            "captures": {
                "1": {
                    "name": "entity.name.function.label.mips"
                }
            },
            "match": "\\b([A-Za-z0-9_]+):",
            "name": "meta.function.label.mips"
        },
        {
            "captures": {
                "1": {
                    "name": "punctuation.definition.variable.mips"
                }
            },
            "match": "(\\$)(0|[2-9]|1[0-9]|2[0-5]|2[89]|3[0-1])\\b",
            "name": "variable.other.register.usable.by-number.mips"
        },
        {
            "captures": {
                "1": {
                    "name": "punctuation.definition.variable.mips"
                }
            },
            "match": "(\\$)(zero|v[01]|a[0-3]|t[0-9]|s[0-8]|gp|sp|fp|ra)\\b",
            "name": "variable.other.register.usable.by-name.mips"
        },
        {
            "captures": {
                "1": {
                    "name": "punctuation.definition.variable.mips"
                }
            },
            "match": "(\\$)(at|k[01]|1|2[67])\\b",
            "name": "variable.other.register.reserved.mips"
        },
        {
            "captures": {
                "1": {
                    "name": "punctuation.definition.variable.mips"
                }
            },
            "match": "(\\$)f([0-9]|1[0-9]|2[0-9]|3[0-1])\\b",
            "name": "variable.other.register.usable.floating-point.mips"
        },
        {
            "match": "\\b\\d+\\.\\d+\\b",
            "name": "constant.numeric.float.mips"
        },
        {
            "match": "(\\b\\d+|-\\b|0(x|X)[a-fA-F0-9]+)\\b",
            "name": "constant.numeric.integer.mips"
        },
        {
            "patterns": [
                {
                    "match": "\\(",
                    "name": "punctuation.section.arguments.begin.bracket.round.mips"
                },
                {
                    "match": "\\)",
                    "name": "punctuation.section.arguments.end.bracket.round.mips"
                }
            ]
        },
        {
            "begin": "\"",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.mips"
                }
            },
            "end": "\"",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.mips"
                }
            },
            "name": "string.quoted.double.mips",
            "patterns": [
                {
                    "match": "\\\\[rnt\\\\\"]",
                    "name": "constant.character.escape.mips"
                }
            ]
        },
        {
            "begin": "'",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.mips"
                }
            },
            "end": "'",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.mips"
                }
            },
            "name": "string.quoted.single.mips",
            "patterns": [
                {
                    "match": "\\\\[rnt\\\\\"]",
                    "name": "constant.character.escape.mips"
                }
            ]
        },
        {
            "begin": "(^[ \\t]+)?(?=#)",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.whitespace.comment.leading.mips"
                }
            },
            "end": "(?!\\G)",
            "patterns": [
                {
                    "begin": "#",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.mips"
                        }
                    },
                    "end": "\\n",
                    "name": "comment.line.number-sign.mips"
                }
            ]
        }
    ],
    "scopeName": "source.mips",
    "uuid": "7FD88C2E-6BE3-11D9-9A40-0011242E4184"
}